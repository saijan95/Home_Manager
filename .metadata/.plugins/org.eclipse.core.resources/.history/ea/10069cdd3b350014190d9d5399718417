package com.droidz.homemanager;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.graphics.drawable.Drawable;
import android.net.Uri;

public class HomeManager {
	private ResolveInfo preferredActivity;
	private List<ResolveInfo> resolveInfoList;
	private PackageManager packageManager;
	protected boolean defaultFound = false;
	
	public HomeManager(Context context) {
		packageManager = context.getPackageManager();
	}
	
	private boolean isDefault(String packageName) {
		if(preferredActivity.activityInfo.packageName.equals(packageName)) {
			defaultFound = true;
			return true;
		}
		
		return false;
	}
	
	private boolean isSystemApp(String packageName) {
		ApplicationInfo appInfo = null;
		
		try {
			appInfo = packageManager.getApplicationInfo(packageName, 0);
		} catch (NameNotFoundException e) {
			e.printStackTrace();
		}
		
		if((appInfo.flags & (ApplicationInfo.FLAG_SYSTEM | ApplicationInfo.FLAG_UPDATED_SYSTEM_APP)) != 0)
			return true;
		
		return false;
	}
	
	protected List<Launcher> getLaunchers() {
		List<Launcher> launchers = new ArrayList<Launcher>();
		
		Intent intent = new Intent(Intent.ACTION_MAIN);
		intent.addCategory(Intent.CATEGORY_HOME);
		
		resolveInfoList = packageManager.queryIntentActivities(intent, 0);
		preferredActivity = packageManager.resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY);
		
		for(int i = 0; i < resolveInfoList.size(); i++) {
			ResolveInfo resolveInfo = resolveInfoList.get(i);
		
			String packageName = resolveInfo.activityInfo.packageName;
			String name = resolveInfo.loadLabel(packageManager).toString();
			Drawable icon = resolveInfo.loadIcon(packageManager);
		
			if(!defaultFound)
				launchers.add(new Launcher(packageName, isDefault(packageName), icon, name, isSystemApp(packageName)));
			else
				launchers.add(new Launcher(packageName, false, icon, name, isSystemApp(packageName)));
		}
		return launchers;
	}
	
	protected int getNumberOfLaunchersInstalled() { return resolveInfoList.size(); }
}
