package com.droidz.homemanager;

import java.util.ArrayList;
import java.util.List;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.graphics.drawable.Drawable;
import android.net.Uri;

public class HomeManager {
	private Context context;
	private ResolveInfo preferredActivity;
	private List<ResolveInfo> resolveInfoList;
	private PackageManager packageManager;
	protected boolean defaultFound = false;
	
	public HomeManager(Context context) {
		this.context = context;
		packageManager = context.getPackageManager();
	}
	
	private boolean isDefault(String packageName) {
		if(preferredActivity.activityInfo.packageName.equals(packageName)) {
			defaultFound = true;
			return true;
		}
		
		return false;
	}
	
	private boolean isSystemApp(String packageName) {
		ApplicationInfo appInfo = null;
		
		try {
			appInfo = packageManager.getApplicationInfo(packageName, 0);
		} catch (NameNotFoundException e) {
			e.printStackTrace();
		}
		
		if((appInfo.flags & (ApplicationInfo.FLAG_SYSTEM | ApplicationInfo.FLAG_UPDATED_SYSTEM_APP)) != 0)
			return true;
		
		return false;
	}
	
	protected List<Launcher> getLaunchers() {
		List<Launcher> launchers = new ArrayList<Launcher>();
		
		Intent intent = new Intent(Intent.ACTION_MAIN);
		intent.addCategory(Intent.CATEGORY_HOME);
		
		resolveInfoList = packageManager.queryIntentActivities(intent, 0);
		preferredActivity = packageManager.resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY);
		
		for(int i = 0; i < resolveInfoList.size(); i++) {
			ResolveInfo resolveInfo = resolveInfoList.get(i);
		
			String packageName = resolveInfo.activityInfo.packageName;
			String name = resolveInfo.loadLabel(packageManager).toString();
			Drawable icon = resolveInfo.loadIcon(packageManager);
		
			if(!defaultFound)
				launchers.add(new Launcher(packageName, isDefault(packageName), icon, name, isSystemApp(packageName)));
			else
				launchers.add(new Launcher(packageName, false, icon, name, isSystemApp(packageName)));
		}
		return launchers;
	}
	
	protected void launchPackage(String packageName) {
		Intent intent = new Intent();
		intent.setPackage(packageName);
		intent.setAction(Intent.ACTION_MAIN);
		intent.addCategory(Intent.CATEGORY_HOME);
		context.startActivity(intent);
	}
	
	protected void uninstallPackage(String packageName) {
		Intent intent = new Intent(Intent.ACTION_UNINSTALL_PACKAGE);
		
		Uri uri = Uri.fromParts("package", packageName, null);
		intent.setData(uri);
		
		context.startActivity(intent);
	}
	
	private void askToClearDefault(String selectedPackageName) {
		Intent showAppInfo = new Intent();
		showAppInfo.setAction(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
		
		Uri uri = Uri.fromParts("package", selectedPackageName, null);
		showAppInfo.setData(uri);
		
		context.startActivity(showAppInfo);
	}

	protected void showClearDefaultsDialog(final String selectedPackageName) {
		AlertDialog.Builder builder = new AlertDialog.Builder(context);
		builder.setMessage(R.string.clear_defaults);
		builder.setCancelable(true);
		builder.setPositiveButton("Ok", 
				new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						askToClearDefault(selectedPackageName);
					}
		});
		
		builder.setNegativeButton("Cancel", 
				new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						dialog.cancel();
					}
		});		
		
		AlertDialog alertDialog = builder.create();
		alertDialog.show();
	}
	
	protected void showGetMoreLaunchersDialog() {
		AlertDialog.Builder builder = new AlertDialog.Builder(context);
		builder.setMessage(R.string.get_more_launchers);
		builder.setPositiveButton("Ok", 
				new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						
					}
		});		
		
		AlertDialog alertDialog = builder.create();
		alertDialog.show();
	}
	
	protected int getNumberOfLaunchersInstalled() { return resolveInfoList.size(); }
}
